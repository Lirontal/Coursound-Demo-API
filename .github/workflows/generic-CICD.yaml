name: CI/CD

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      # - name: Run tests
      #   id: tests
      #   if: ${{ github.event.inputs.environment == 'dev' }}
      #   run: |
      #     python -m unittest discover -s app
      #     echo "::set-output name=tests-passed::${{ job.status }}"
          
      # - name: Stop workflow if tests fail
      #   if: ${{ steps.tests.outputs.tests-passed != 'success' }}
      #   run: exit 1

      - name: Get repository name as lower case string
        id: repo-name-string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Get repository owner's name as lower case string
        id: repository_owner-name-string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.repository_owner-name-string.outputs.lowercase }}/${{ steps.repo-name-string.outputs.lowercase }}:${{ github.sha }}
        
      - name: Configure AWS Lambda environment variables
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Deploy to AWS Lambda
        if: ${{ steps.tests.outputs.tests-passed == 'success' }}
        run: |
          aws lambda create-function \
            --function-name CorSoundMission \
            --runtime python3.9 \
            --handler app.lambda_handler \
            --code ImageUri=ghcr.io/${{ github.repository_owner }}/CorSoundMission:${{ github.sha }} \